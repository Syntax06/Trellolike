html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}

body {
  line-height: 1;
}

ol,
ul {
  list-style: none;
}

blockquote,
q {
  quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

body {
  font-family: "PT Sans", sans-serif;
  min-height: 740px;
  background: #d7d7d7;
  background: radial-gradient(#f0f0f0, #bebebe);
}

/*
    Now let's bring some text styles back ...
*/

b,
strong {
  font-weight: bold;
}

i,
em {
  font-style: italic;
}

/*
    ... and give links a nice look.
*/

a {
  color: inherit;
  text-decoration: none;
  padding: 0 0.1em;
  background: rgba(255, 255, 255, 0.5);
  text-shadow: -1px -1px 2px rgba(100, 100, 100, 0.9);
  border-radius: 0.2em;
  transition: 0.5s;
}

a:hover,
a:focus {
  background: white;
  text-shadow: -1px -1px 2px rgba(100, 100, 100, 0.5);
}

.fallback-message {
  font-family: sans-serif;
  line-height: 1.3;
  width: 780px;
  padding: 10px 10px 0;
  margin: 20px auto;
  border: 1px solid #E4C652;
  border-radius: 10px;
  background: #EEDC94;
}

.fallback-message p {
  margin-bottom: 10px;
}

.impress-supported .fallback-message {
  display: none;
}

.step {
  position: relative;
  width: 900px;
  padding: 40px;
  margin: 20px auto;
  -ms-box-sizing: border-box;
  -o-box-sizing: border-box;
  box-sizing: border-box;
  font-family: "PT Serif", georgia, serif;
  font-size: 48px;
  line-height: 1.5;
}

.impress-enabled .step {
  margin: 0;
  opacity: 0.3;
  transition: opacity 1s;
}

.impress-enabled .step.active {
  opacity: 1;
}

.slide {
  display: block;
  width: 900px;
  height: 700px;
  padding: 40px 60px;
  background-color: white;
  border: 1px solid rgba(0, 0, 0, 0.3);
  border-radius: 10px;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
  color: #666666;
  text-shadow: 0 2px 2px rgba(0, 0, 0, 0.1);
  font-family: "Open Sans", Arial, sans-serif;
  font-size: 30px;
  line-height: 36px;
  letter-spacing: -1px;
}

.slide q {
  display: block;
  font-size: 50px;
  line-height: 72px;
  margin-top: 100px;
}

.slide q strong {
  white-space: nowrap;
}

#title {
  padding: 0;
}

#title .try {
  font-size: 64px;
  position: absolute;
  top: -0.5em;
  left: 1.5em;
  transform: translateZ(20px);
}

#title h1 {
  font-size: 180px;
  transform: translateZ(50px);
}

#title .footnote {
  font-size: 32px;
}

#big {
  width: 600px;
  text-align: center;
  font-size: 60px;
  line-height: 1;
}

#big strong,
#big b {
  display: block;
  font-size: 250px;
  line-height: 250px;
}

#big .thoughts {
  font-size: 90px;
  line-height: 150px;
}

#tiny {
  width: 500px;
  text-align: center;
}

/*
    This step has some animated text ...
*/

#ing {
  width: 500px;
}

/*
    ... so we define display to `inline-block` to enable transforms and
    transition duration to 0.5s ...
*/

#ing b {
  display: inline-block;
  transition: 0.5s;
}

/*
    ... and we want 'positioning` word to move up a bit when the step gets
    `present` class ...
*/

#ing.present .positioning {
  transform: translateY(-10px);
}

/*
    ... 'rotating' to rotate a quarter of a second later ...
*/

#ing.present .rotating {
  transform: rotate(-10deg);
  transition-delay: 0.25s;
}

/*
    ... and 'scaling' to scale down after another quarter of a second.
*/

#ing.present .scaling {
  transform: scale(0.7);
  transition-delay: 0.5s;
}

/*
    The 'imagination' step is again some boring font-sizing.
*/

#imagination {
  width: 600px;
}

#imagination .imagination {
  font-size: 78px;
}

/*image a rajouter*/

#source {
  width: 700px;
  padding-bottom: 300px;
  background-position: bottom right;
  background-repeat: no-repeat;
}

#source q {
  font-size: 60px;
}

#its-in-3d p {
  transform-style: preserve-3d;
}

#its-in-3d span,
#its-in-3d b {
  display: inline-block;
  transform: translateZ(40px);
  transition: 0.5s;
}

#its-in-3d .have {
  transform: translateZ(-40px);
}

#its-in-3d .you {
  transform: translateZ(20px);
}

#its-in-3d .noticed {
  transform: translateZ(-40px);
}

#its-in-3d .its {
  transform: translateZ(60px);
}

#its-in-3d .in {
  transform: translateZ(-10px);
}

#its-in-3d .footnote {
  font-size: 32px;
  transform: translateZ(-10px);
}

#its-in-3d.present span,
#its-in-3d.present b {
  transform: translateZ(0px);
}

/*
    The last step is an overview.
    There is no content in it, so we make sure it's not visible because we want
    to be able to click on other steps.

*/

#overview {
  display: none;
}

/*
    We also make other steps visible and give them a pointer cursor using the
    `impress-on-` class.
*/

.impress-on-overview .step {
  opacity: 1;
  cursor: pointer;
}

.hint {
  display: none;
  /*
      ... and give it some fixed position and nice styles.
  */
  position: fixed;
  left: 0;
  right: 0;
  bottom: 200px;
  background: rgba(0, 0, 0, 0.5);
  color: #EEE;
  text-align: center;
  font-size: 50px;
  padding: 20px;
  z-index: 100;
  /*
      By default we don't want the hint to be visible, so we make it transparent ...
  */
  opacity: 0;
  /*
      ... and position it below the bottom of the screen (relative to it's fixed position)
  */
  transform: translateY(400px);
  /*
      Now let's imagine that the hint is visible and we want to fade it out and move out
      of the screen.

      So we define the transition on the opacity property with 1s duration and another
      transition on transform property delayed by 1s so it will happen after the fade out
      on opacity finished.

      This way user will not see the hint moving down.
  */
  transition: opacity 1s, transform 0.5s 1s;
}

/*
    Now we 'enable' the hint when presentation is initialized ...
*/

.impress-enabled .hint {
  display: block;
}

/*
    ... and we will show it when the first step (with id 'bored') is active.
*/

.impress-on-bored .hint {
  /*
      We remove the transparency and position the hint in its default fixed
      position.
  */
  opacity: 1;
  transform: translateY(0px);
  /*
      Now for fade in transition we have the oposite situation from the one
      above.

      First after 4.5s delay we animate the transform property to move the hint
      into its correct position and after that we fade it in with opacity
      transition.
  */
  transition: opacity 1s 5s, transform 0.5s 4.5s;
}

